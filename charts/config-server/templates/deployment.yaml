apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "config-server.fullname" . }}
  labels:
    {{- include "config-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "config-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "config-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "config-server.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.spring_profiles.enabled }}
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.spring_profiles.spring_profiles_active }}"
            {{- range $index, $repo := .Values.spring_profiles.spring_compositeRepos }}
            - name: SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_{{ $index }}_URI
              value: "{{ $repo.uri }}"
            - name: SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_{{ $index }}_TYPE
              value: "{{ $repo.type }}"
            - name: SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_{{ $index }}_DEFAULT_LABEL
              value: "{{ $repo.version }}"
            - name: SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_{{ $index }}_CLONE_ON_START
              value: "{{ $repo.spring_cloud_config_server_git_cloneOnStart }}"
            - name: SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_{{ $index }}_FORCE_PULL
              value: "{{ $repo.spring_cloud_config_server_git_force_pull }}"
            - name: SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_{{ $index }}_REFRESH_RATE
              value: "{{ $repo.spring_cloud_config_server_git_refreshRate }}"
            {{- end }}
            - name: SPRING_CLOUD_CONFIG_SERVER_FAILONCOMPOSITEERROR
              value: "{{ .Values.spring_profiles.spring_fail_on_composite_error }}"
          {{- end }}
          {{- if .Values.localRepo.enabled }}
            - name: spring_cloud_config_server_native_search-locations
              value: {{ .Values.localRepo.spring_cloud_config_server_native_search_locations | quote }}
            - name: spring_cloud_config_server_accept-empty
              value: {{ .Values.localRepo.spring_cloud_config_server_accept_empty | quote }}
            - name: spring_cloud_config_server_git_force-pull
              value: {{ .Values.localRepo.spring_cloud_config_server_git_force_pull | quote }}
            - name: spring_cloud_config_server_git_refreshRate
              value: {{ .Values.localRepo.spring_cloud_config_server_git_refreshRate | quote }}
            - name: spring_cloud_config_server_git_cloneOnStart
              value: {{ .Values.localRepo.spring_cloud_config_server_git_cloneOnStart | quote }}          
          {{- end }}
 
            - name: SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD
              valueFrom:
                 secretKeyRef:
                   name: {{ include "config-server.fullname" . }}
                   key: github-token
            {{- range .Values.envVariables }}
            {{- if .enabled }}
            - name: {{ .name }}
              valueFrom:
                {{- if .valueFrom.configMapKeyRef }}
                configMapKeyRef:
                  name: {{ .valueFrom.configMapKeyRef.name }}
                  key: {{ .valueFrom.configMapKeyRef.key }}
                {{- else if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                {{- end }}
            {{- end }}
            {{- end }}


            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-env-vars" (include "config-server.fullname" .) }}
          ports:
            - name: http
              containerPort: {{ .Values.springServicePort }}
              protocol: TCP
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.spring_profiles.enabled }}
        {{- if or .Values.localRepo.enabled (include "config-server.hasNative" . | eq "true") }}
          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: {{ .Values.volume.mountDir }}
        {{- end }}
      {{- end }}
  {{- if .Values.spring_profiles.enabled }}
    {{- if or .Values.localRepo.enabled (include "config-server.hasNative" . | eq "true") }}
      volumes:
      - name: {{ .Values.volume.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.volume.name }}
    {{- end }}
  {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
